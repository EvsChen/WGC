!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},n.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/",n(n.s=5)}([function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var n=e.protocol+"//"+e.host,r=n+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(t,e){var o,i=e.trim().replace(/^"(.*)"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?t:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(t,e,n){var r,o,i={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),s=function(t){var e={};return function(t){if("function"==typeof t)return t();if(void 0===e[t]){var n=function(t){return document.querySelector(t)}.call(this,t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}}(),u=null,c=0,l=[],f=n(0);function d(t,e){for(var n=0;n<t.length;n++){var r=t[n],o=i[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(g(r.parts[a],e))}else{var s=[];for(a=0;a<r.parts.length;a++)s.push(g(r.parts[a],e));i[r.id]={id:r.id,refs:1,parts:s}}}}function p(t,e){for(var n=[],r={},o=0;o<t.length;o++){var i=t[o],a=e.base?i[0]+e.base:i[0],s={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(s):n.push(r[a]={id:a,parts:[s]})}return n}function h(t,e){var n=s(t.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=l[l.length-1];if("top"===t.insertAt)r?r.nextSibling?n.insertBefore(e,r.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),l.push(e);else if("bottom"===t.insertAt)n.appendChild(e);else{if("object"!=typeof t.insertAt||!t.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=s(t.insertInto+" "+t.insertAt.before);n.insertBefore(e,o)}}function m(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=l.indexOf(t);e>=0&&l.splice(e,1)}function y(t){var e=document.createElement("style");return void 0===t.attrs.type&&(t.attrs.type="text/css"),v(e,t.attrs),h(t,e),e}function v(t,e){Object.keys(e).forEach(function(n){t.setAttribute(n,e[n])})}function g(t,e){var n,r,o,i;if(e.transform&&t.css){if(!(i=e.transform(t.css)))return function(){};t.css=i}if(e.singleton){var a=c++;n=u||(u=y(e)),r=x.bind(null,n,a,!1),o=x.bind(null,n,a,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(t){var e=document.createElement("link");return void 0===t.attrs.type&&(t.attrs.type="text/css"),t.attrs.rel="stylesheet",v(e,t.attrs),h(t,e),e}(e),r=function(t,e,n){var r=n.css,o=n.sourceMap,i=void 0===e.convertToAbsoluteUrls&&o;(e.convertToAbsoluteUrls||i)&&(r=f(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),s=t.href;t.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}.bind(null,n,e),o=function(){m(n),n.href&&URL.revokeObjectURL(n.href)}):(n=y(e),r=function(t,e){var n=e.css,r=e.media;r&&t.setAttribute("media",r);if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){m(n)});return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=a()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var n=p(t,e);return d(n,e),function(t){for(var r=[],o=0;o<n.length;o++){var a=n[o];(s=i[a.id]).refs--,r.push(s)}t&&d(p(t,e),e);for(o=0;o<r.length;o++){var s;if(0===(s=r[o]).refs){for(var u=0;u<s.parts.length;u++)s.parts[u]();delete i[s.id]}}}};var b,w=(b=[],function(t,e){return b[t]=e,b.filter(Boolean).join("\n")});function x(t,e,n,r){var o=n?"":r.css;if(t.styleSheet)t.styleSheet.cssText=w(e,o);else{var i=document.createTextNode(o),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}},function(t,e){t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n=function(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var o=(a=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),i=r.sources.map(function(t){return"/*# sourceURL="+r.sourceRoot+t+" */"});return[n].concat(i).concat([o]).join("\n")}var a;return[n].join("\n")}(e,t);return e[2]?"@media "+e[2]+"{"+n+"}":n}).join("")},e.i=function(t,n){"string"==typeof t&&(t=[[null,t,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<t.length;o++){var a=t[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),e.push(a))}},e}},function(t,e,n){(t.exports=n(2)(!1)).push([t.i,".controller {\n  display: none;\n}\n.show {\n  display: block;\n}\n",""])},function(t,e,n){var r=n(3);"string"==typeof r&&(r=[[t.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(1)(r,o);r.locals&&(t.exports=r.locals)},function(t,e,n){"use strict";n.r(e);n(4);var r=n(7),o=n.n(r);const i=io(),a=document.createElement("div");if(a.id="qr",document.body.appendChild(a),window.location.href.indexOf("?id=")>0){console.log(`Hey, you're a controller trying to connect to: ${window.location.href.split("?id=")[1]}`),document.getElementById("controller").classList.add("show"),i.emit("controller_connect",window.location.href.split("?id=")[1]);const t={accelerate:!1,steer:0,direction:0},e="direction",n=()=>{i.emit("controller_state_change",t)},r=e=>{e.preventDefault(),console.log("mouse down"),t.accelerate=!0,n()},o=e=>{e.preventDefault(),t.accelerate=!1,n()},a=e=>{t.steer=e.accelerationIncludingGravity.y/100,n()};if("touch"===e)window.addEventListener("touchstart",r,!1),window.addEventListener("MSPointerDown",r,!1),window.addEventListener("touchend",o,!1),window.addEventListener("MSPointerUp",o,!1),window.addEventListener("devicemotion",a,!1),window.addEventListener("mousedown",r,!1),window.addEventListener("mouseup",o,!1);else if("direction"===e){const e=()=>{console.log("Left button clicked"),t.direction-=5,n()},r=()=>{console.log("Right button clicked"),t.direction+=5,n()};document.getElementById("left").onclick=e,document.getElementById("right").onclick=r}}else{class t{constructor(t,e){this.x=t,this.y=e,this.accelerate=!1,this.speed=0,this.steer=0,this.direction=0;const n=document.createElement("div");n.id="carId",n.style.width="100px",n.style.height="100px",n.style.position="absolute",n.style.left=`${t}px`,n.style.top=`${e}px`,n.style.backgroundColor="red",document.body.appendChild(n),this.elem=document.getElementById("carId"),this.refreshInterval=window.setInterval(this.refreshState.bind(this),100)}setState(t){this.accelerate=t.accelerate||0,this.steer=t.steer||0,this.direction=t.direction||0,this.refreshState()}refreshState(){this.accelerate?this.speed<20&&(this.speed+=3):this.speed>0&&(this.speed-=3),this.x+=this.speed,this.setPositon(),this.setAngle()}setAngle(){o()({targets:this.elem,rotate:{value:this.direction},duration:500,loop:!1})}setPositon(){this.elem.style.left=`${this.x}px`,this.elem.style.top=`${this.y}px`}destroy(){document.body.removeChild(this.elem),window.clearInterval(this.refreshInterval)}}i.emit("game_connect");const e=()=>{const t=`http://192.168.31.22:3000?id=${i.id}`;document.body.innerHTML+=t,new QRCode("qr").makeCode(t),i.removeListener("game_connected",e)},n=e=>{if(e){console.log("Controller connected successfully"),document.getElementById("qr").style.display="none";const e=new t(100,100);i.on("controller_state_change",t=>{e.setState(t)}),i.on("controller_disconnected",()=>{e.destroy()})}else console.log("Controller failed to connect"),document.getElementById("qr").style.display="block"};i.on("game_connected",e),i.on("controller_connected",n)}},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){(function(n){var r,o,i,a={scope:{}};a.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(t,e,n){if(n.get||n.set)throw new TypeError("ES3 does not support getters and setters.");t!=Array.prototype&&t!=Object.prototype&&(t[e]=n.value)},a.getGlobal=function(t){return"undefined"!=typeof window&&window===t?t:void 0!==n&&null!=n?n:t},a.global=a.getGlobal(this),a.SYMBOL_PREFIX="jscomp_symbol_",a.initSymbol=function(){a.initSymbol=function(){},a.global.Symbol||(a.global.Symbol=a.Symbol)},a.symbolCounter_=0,a.Symbol=function(t){return a.SYMBOL_PREFIX+(t||"")+a.symbolCounter_++},a.initSymbolIterator=function(){a.initSymbol();var t=a.global.Symbol.iterator;t||(t=a.global.Symbol.iterator=a.global.Symbol("iterator")),"function"!=typeof Array.prototype[t]&&a.defineProperty(Array.prototype,t,{configurable:!0,writable:!0,value:function(){return a.arrayIterator(this)}}),a.initSymbolIterator=function(){}},a.arrayIterator=function(t){var e=0;return a.iteratorPrototype(function(){return e<t.length?{done:!1,value:t[e++]}:{done:!0}})},a.iteratorPrototype=function(t){return a.initSymbolIterator(),(t={next:t})[a.global.Symbol.iterator]=function(){return this},t},a.array=a.array||{},a.iteratorFromArray=function(t,e){a.initSymbolIterator(),t instanceof String&&(t+="");var n=0,r={next:function(){if(n<t.length){var o=n++;return{value:e(o,t[o]),done:!1}}return r.next=function(){return{done:!0,value:void 0}},r.next()}};return r[Symbol.iterator]=function(){return r},r},a.polyfill=function(t,e,n,r){if(e){for(n=a.global,t=t.split("."),r=0;r<t.length-1;r++){var o=t[r];o in n||(n[o]={}),n=n[o]}(e=e(r=n[t=t[t.length-1]]))!=r&&null!=e&&a.defineProperty(n,t,{configurable:!0,writable:!0,value:e})}},a.polyfill("Array.prototype.keys",function(t){return t||function(){return a.iteratorFromArray(this,function(t){return t})}},"es6-impl","es3");var s=this;o=[],void 0===(i="function"==typeof(r=function(){function t(t){if(!C.col(t))try{return document.querySelectorAll(t)}catch(t){}}function e(t,e){for(var n=t.length,r=2<=arguments.length?arguments[1]:void 0,o=[],i=0;i<n;i++)if(i in t){var a=t[i];e.call(r,a,i,t)&&o.push(a)}return o}function n(t){return t.reduce(function(t,e){return t.concat(C.arr(e)?n(e):e)},[])}function r(e){return C.arr(e)?e:(C.str(e)&&(e=t(e)||e),e instanceof NodeList||e instanceof HTMLCollection?[].slice.call(e):[e])}function o(t,e){return t.some(function(t){return t===e})}function i(t){var e,n={};for(e in t)n[e]=t[e];return n}function a(t,e){var n,r=i(t);for(n in t)r[n]=e.hasOwnProperty(n)?e[n]:t[n];return r}function u(t,e){var n,r=i(t);for(n in e)r[n]=C.und(t[n])?e[n]:t[n];return r}function c(t){if(t=/([\+\-]?[0-9#\.]+)(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(t))return t[2]}function l(t,e){return C.fnc(t)?t(e.target,e.id,e.total):t}function f(t,e){if(e in t.style)return getComputedStyle(t).getPropertyValue(e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase())||"0"}function d(t,e){return C.dom(t)&&o(j,e)?"transform":C.dom(t)&&(t.getAttribute(e)||C.svg(t)&&t[e])?"attribute":C.dom(t)&&"transform"!==e&&f(t,e)?"css":null!=t[e]?"object":void 0}function p(t,n){switch(d(t,n)){case"transform":return function(t,n){var r=function(t){return-1<t.indexOf("translate")||"perspective"===t?"px":-1<t.indexOf("rotate")||-1<t.indexOf("skew")?"deg":void 0}(n),r=-1<n.indexOf("scale")?1:0+r;if(!(t=t.style.transform))return r;for(var o=[],i=[],a=[],s=/(\w+)\((.+?)\)/g;o=s.exec(t);)i.push(o[1]),a.push(o[2]);return(t=e(a,function(t,e){return i[e]===n})).length?t[0]:r}(t,n);case"css":return f(t,n);case"attribute":return t.getAttribute(n)}return t[n]||0}function h(t,e){var n=/^(\*=|\+=|-=)/.exec(t);if(!n)return t;var r=c(t)||0;switch(e=parseFloat(e),t=parseFloat(t.replace(n[0],"")),n[0][0]){case"+":return e+t+r;case"-":return e-t+r;case"*":return e*t+r}}function m(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))}function y(t){t=t.points;for(var e,n=0,r=0;r<t.numberOfItems;r++){var o=t.getItem(r);0<r&&(n+=m(e,o)),e=o}return n}function v(t){if(t.getTotalLength)return t.getTotalLength();switch(t.tagName.toLowerCase()){case"circle":return 2*Math.PI*t.getAttribute("r");case"rect":return 2*t.getAttribute("width")+2*t.getAttribute("height");case"line":return m({x:t.getAttribute("x1"),y:t.getAttribute("y1")},{x:t.getAttribute("x2"),y:t.getAttribute("y2")});case"polyline":return y(t);case"polygon":var e=t.points;return y(t)+m(e.getItem(e.numberOfItems-1),e.getItem(0))}}function g(t,e){function n(n){return n=void 0===n?0:n,t.el.getPointAtLength(1<=e+n?e+n:0)}var r=n(),o=n(-1),i=n(1);switch(t.property){case"x":return r.x;case"y":return r.y;case"angle":return 180*Math.atan2(i.y-o.y,i.x-o.x)/Math.PI}}function b(t,e){var n,r=/-?\d*\.?\d+/g;if(n=C.pth(t)?t.totalLength:t,C.col(n))if(C.rgb(n)){var o=/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(n);n=o?"rgba("+o[1]+",1)":n}else n=C.hex(n)?function(t){t=t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,function(t,e,n,r){return e+e+n+n+r+r});var e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);t=parseInt(e[1],16);var n=parseInt(e[2],16),e=parseInt(e[3],16);return"rgba("+t+","+n+","+e+",1)"}(n):C.hsl(n)?function(t){function e(t,e,n){return 0>n&&(n+=1),1<n&&--n,n<1/6?t+6*(e-t)*n:.5>n?e:n<2/3?t+(e-t)*(2/3-n)*6:t}var n=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(t)||/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(t);t=parseInt(n[1])/360;var r=parseInt(n[2])/100,o=parseInt(n[3])/100,n=n[4]||1;if(0==r)o=r=t=o;else{var i=.5>o?o*(1+r):o+r-o*r,a=2*o-i,o=e(a,i,t+1/3),r=e(a,i,t);t=e(a,i,t-1/3)}return"rgba("+255*o+","+255*r+","+255*t+","+n+")"}(n):void 0;else o=(o=c(n))?n.substr(0,n.length-o.length):n,n=e&&!/\s/g.test(n)?o+e:o;return{original:n+="",numbers:n.match(r)?n.match(r).map(Number):[0],strings:C.str(t)||e?n.split(r):[]}}function w(t){return e(t=t?n(C.arr(t)?t.map(r):r(t)):[],function(t,e,n){return n.indexOf(t)===e})}function x(t,e){var n=i(e);if(C.arr(t)){var o=t.length;2!==o||C.obj(t[0])?C.fnc(e.duration)||(n.duration=e.duration/o):t={value:t}}return r(t).map(function(t,n){return n=n?0:e.delay,t=C.obj(t)&&!C.pth(t)?t:{value:t},C.und(t.delay)&&(t.delay=n),t}).map(function(t){return u(t,n)})}function I(t,e){var n;return t.tweens.map(function(r){var o=(r=function(t,e){var n,r={};for(n in t){var o=l(t[n],e);C.arr(o)&&1===(o=o.map(function(t){return l(t,e)})).length&&(o=o[0]),r[n]=o}return r.duration=parseFloat(r.duration),r.delay=parseFloat(r.delay),r}(r,e)).value,i=p(e.target,t.name),a=n?n.to.original:i,a=C.arr(o)?o[0]:a,s=h(C.arr(o)?o[1]:o,a),i=c(s)||c(a)||c(i);return r.from=b(a,i),r.to=b(s,i),r.start=n?n.end:t.offset,r.end=r.start+r.delay+r.duration,r.easing=function(t){return C.arr(t)?P.apply(this,t):k[t]}(r.easing),r.elasticity=(1e3-Math.min(Math.max(r.elasticity,1),999))/1e3,r.isPath=C.pth(o),r.isColor=C.col(r.from.original),r.isColor&&(r.round=1),n=r})}function S(t,e,n,r){var o="delay"===t;return e.length?(o?Math.min:Math.max).apply(Math,e.map(function(e){return e[t]})):o?r.delay:n.offset+r.delay+r.duration}function A(t){var r,o=a(M,t),i=a(E,t),s=function(t){var e=w(t);return e.map(function(t,n){return{target:t,id:n,total:e.length}})}(t.targets),c=[],l=u(o,i);for(r in t)l.hasOwnProperty(r)||"targets"===r||c.push({name:r,offset:l.offset,tweens:x(t[r],i)});return t=function(t,r){return e(n(t.map(function(t){return r.map(function(e){var n=d(t.target,e.name);if(n){var r=I(e,t);e={type:n,property:e.name,animatable:t,tweens:r,duration:r[r.length-1].end,delay:r[0].delay}}else e=void 0;return e})})),function(t){return!C.und(t)})}(s,c),u(o,{children:[],animatables:s,animations:t,duration:S("duration",t,o,i),delay:S("delay",t,o,i)})}function O(t){function n(){return window.Promise&&new Promise(function(t){return d=t})}function r(t){return h.reversed?h.duration-t:t}function o(t){for(var n=0,r={},o=h.animations,i=o.length;n<i;){var a=o[n],s=a.animatable,u=a.tweens,c=u.length-1,l=u[c];c&&(l=e(u,function(e){return t<e.end})[0]||l);for(var u=Math.min(Math.max(t-l.start-l.delay,0),l.duration)/l.duration,d=isNaN(u)?1:l.easing(u,l.elasticity),u=l.to.strings,p=l.round,c=[],m=void 0,m=l.to.numbers.length,y=0;y<m;y++){var v=void 0,v=l.to.numbers[y],b=l.from.numbers[y],v=l.isPath?g(l.value,d*v):b+d*(v-b);p&&(l.isColor&&2<y||(v=Math.round(v*p)/p)),c.push(v)}if(l=u.length)for(m=u[0],d=0;d<l;d++)p=u[d+1],y=c[d],isNaN(y)||(m=p?m+(y+p):m+(y+" "));else m=c[0];T[a.type](s.target,a.property,m,r,s.id),a.currentValue=m,n++}if(n=Object.keys(r).length)for(o=0;o<n;o++)L||(L=f(document.body,"transform")?"transform":"-webkit-transform"),h.animatables[o].target.style[L]=r[o].join(" ");h.currentTime=t,h.progress=t/h.duration*100}function i(t){h[t]&&h[t](h)}function a(){h.remaining&&!0!==h.remaining&&h.remaining--}function s(t){var e=h.duration,s=h.offset,f=s+h.delay,m=h.currentTime,y=h.reversed,v=r(t);if(h.children.length){var g=h.children,b=g.length;if(v>=h.currentTime)for(var w=0;w<b;w++)g[w].seek(v);else for(;b--;)g[b].seek(v)}(v>=f||!e)&&(h.began||(h.began=!0,i("begin")),i("run")),v>s&&v<e?o(v):(v<=s&&0!==m&&(o(0),y&&a()),(v>=e&&m!==e||!e)&&(o(e),y||a())),i("update"),t>=e&&(h.remaining?(c=u,"alternate"===h.direction&&(h.reversed=!h.reversed)):(h.pause(),h.completed||(h.completed=!0,i("complete"),"Promise"in window&&(d(),p=n()))),l=0)}t=void 0===t?{}:t;var u,c,l=0,d=null,p=n(),h=A(t);return h.reset=function(){var t=h.direction,e=h.loop;for(h.currentTime=0,h.progress=0,h.paused=!0,h.began=!1,h.completed=!1,h.reversed="reverse"===t,h.remaining="alternate"===t&&1===e?2:e,o(0),t=h.children.length;t--;)h.children[t].reset()},h.tick=function(t){u=t,c||(c=u),s((l+u-c)*O.speed)},h.seek=function(t){s(r(t))},h.pause=function(){var t=U.indexOf(h);-1<t&&U.splice(t,1),h.paused=!0},h.play=function(){h.paused&&(h.paused=!1,c=0,l=r(h.currentTime),U.push(h),R||_())},h.reverse=function(){h.reversed=!h.reversed,c=0,l=r(h.currentTime)},h.restart=function(){h.pause(),h.reset(),h.play()},h.finished=p,h.reset(),h.autoplay&&h.play(),h}var L,M={update:void 0,begin:void 0,run:void 0,complete:void 0,loop:1,direction:"normal",autoplay:!0,offset:0},E={duration:1e3,delay:0,easing:"easeOutElastic",elasticity:500,round:0},j="translateX translateY translateZ rotate rotateX rotateY rotateZ scale scaleX scaleY scaleZ skewX skewY perspective".split(" "),C={arr:function(t){return Array.isArray(t)},obj:function(t){return-1<Object.prototype.toString.call(t).indexOf("Object")},pth:function(t){return C.obj(t)&&t.hasOwnProperty("totalLength")},svg:function(t){return t instanceof SVGElement},dom:function(t){return t.nodeType||C.svg(t)},str:function(t){return"string"==typeof t},fnc:function(t){return"function"==typeof t},und:function(t){return void 0===t},hex:function(t){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(t)},rgb:function(t){return/^rgb/.test(t)},hsl:function(t){return/^hsl/.test(t)},col:function(t){return C.hex(t)||C.rgb(t)||C.hsl(t)}},P=function(){function t(t,e,n){return(((1-3*n+3*e)*t+(3*n-6*e))*t+3*e)*t}return function(e,n,r,o){if(0<=e&&1>=e&&0<=r&&1>=r){var i=new Float32Array(11);if(e!==n||r!==o)for(var a=0;11>a;++a)i[a]=t(.1*a,e,r);return function(a){if(e===n&&r===o)return a;if(0===a)return 0;if(1===a)return 1;for(var s=0,u=1;10!==u&&i[u]<=a;++u)s+=.1;var u=s+(a-i[--u])/(i[u+1]-i[u])*.1,c=3*(1-3*r+3*e)*u*u+2*(3*r-6*e)*u+3*e;if(.001<=c){for(s=0;4>s&&0!=(c=3*(1-3*r+3*e)*u*u+2*(3*r-6*e)*u+3*e);++s)var l=t(u,e,r)-a,u=u-l/c;a=u}else if(0===c)a=u;else{var u=s,s=s+.1,f=0;do{0<(c=t(l=u+(s-u)/2,e,r)-a)?s=l:u=l}while(1e-7<Math.abs(c)&&10>++f);a=l}return t(a,n,o)}}}}(),k=function(){function t(t,e){return 0===t||1===t?t:-Math.pow(2,10*(t-1))*Math.sin(2*(t-1-e/(2*Math.PI)*Math.asin(1))*Math.PI/e)}var e,n="Quad Cubic Quart Quint Sine Expo Circ Back Elastic".split(" "),r={In:[[.55,.085,.68,.53],[.55,.055,.675,.19],[.895,.03,.685,.22],[.755,.05,.855,.06],[.47,0,.745,.715],[.95,.05,.795,.035],[.6,.04,.98,.335],[.6,-.28,.735,.045],t],Out:[[.25,.46,.45,.94],[.215,.61,.355,1],[.165,.84,.44,1],[.23,1,.32,1],[.39,.575,.565,1],[.19,1,.22,1],[.075,.82,.165,1],[.175,.885,.32,1.275],function(e,n){return 1-t(1-e,n)}],InOut:[[.455,.03,.515,.955],[.645,.045,.355,1],[.77,0,.175,1],[.86,0,.07,1],[.445,.05,.55,.95],[1,0,0,1],[.785,.135,.15,.86],[.68,-.55,.265,1.55],function(e,n){return.5>e?t(2*e,n)/2:1-t(-2*e+2,n)/2}]},o={linear:P(.25,.25,.75,.75)},i={};for(e in r)i.type=e,r[i.type].forEach(function(t){return function(e,r){o["ease"+t.type+n[r]]=C.fnc(e)?e:P.apply(s,e)}}(i)),i={type:i.type};return o}(),T={css:function(t,e,n){return t.style[e]=n},attribute:function(t,e,n){return t.setAttribute(e,n)},object:function(t,e,n){return t[e]=n},transform:function(t,e,n,r,o){r[o]||(r[o]=[]),r[o].push(e+"("+n+")")}},U=[],R=0,_=function(){function t(){R=requestAnimationFrame(e)}function e(e){var n=U.length;if(n){for(var r=0;r<n;)U[r]&&U[r].tick(e),r++;t()}else cancelAnimationFrame(R),R=0}return t}();return O.version="2.2.0",O.speed=1,O.running=U,O.remove=function(t){t=w(t);for(var e=U.length;e--;)for(var n=U[e],r=n.animations,i=r.length;i--;)o(t,r[i].animatable.target)&&(r.splice(i,1),r.length||n.pause())},O.getValue=p,O.path=function(e,n){var r=C.str(e)?t(e)[0]:e,o=n||100;return function(t){return{el:r,property:t,totalLength:v(r)*(o/100)}}},O.setDashoffset=function(t){var e=v(t);return t.setAttribute("stroke-dasharray",e),e},O.bezier=P,O.easings=k,O.timeline=function(t){var e=O(t);return e.pause(),e.duration=0,e.add=function(n){return e.children.forEach(function(t){t.began=!0,t.completed=!0}),r(n).forEach(function(n){var r=u(n,a(E,t||{}));r.targets=r.targets||t.targets,n=e.duration;var o=r.offset;r.autoplay=!1,r.direction=e.direction,r.offset=C.und(o)?n:h(o,n),e.began=!0,e.completed=!0,e.seek(r.offset),(r=O(r)).began=!0,r.completed=!0,r.duration>n&&(e.duration=r.duration),e.children.push(r)}),e.seek(0),e.reset(),e.autoplay&&e.restart(),e},e},O.random=function(t,e){return Math.floor(Math.random()*(e-t+1))+t},O})?r.apply(e,o):r)||(t.exports=i)}).call(this,n(6))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,