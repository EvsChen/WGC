!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=1)}([,function(e,t){const n=io(),o=document.createElement("div");if(o.id="qr",document.body.appendChild(o),window.location.href.indexOf("?id=")>0){console.log(`Hey, you're a controller trying to connect to: ${window.location.href.split("?id=")[1]}`),n.emit("controller_connect",window.location.href.split("?id=")[1]);const e={accelerate:!1,steer:0},t=()=>{n.emit("controller_state_change",e)},o=n=>{n.preventDefault(),console.log("mouse down"),e.accelerate=!0,t()},r=n=>{n.preventDefault(),e.accelerate=!1,t()},s=n=>{e.steer=n.accelerationIncludingGravity.y/100,t()};document.body.addEventListener("touchstart",o,!1),document.body.addEventListener("MSPointerDown",o,!1),document.body.addEventListener("touchend",r,!1),document.body.addEventListener("MSPointerUp",r,!1),window.addEventListener("devicemotion",s,!1),window.addEventListener("mousedown",o,!1),window.addEventListener("mouseup",r,!1)}else{class e{constructor(e,t){this.x=e,this.y=t,this.accelerate=!1,this.speed=0,this.steer=0;const n=document.createElement("div");n.id="carId",n.style.width="100px",n.style.height="100px",n.style.position="absolute",n.style.left=`${e}px`,n.style.top=`${t}px`,n.style.backgroundColor="red",document.body.appendChild(n),this.elem=document.getElementById("carId"),this.refreshInterval=window.setInterval(this.refreshState.bind(this),100)}setState(e){this.accelerate=e.accelerate,this.steer=e.steer,this.refreshState()}refreshState(){this.accelerate?this.speed<20&&(this.speed+=3):this.speed>0&&(this.speed-=3),this.x+=this.speed,this.setPositon()}setPositon(){this.elem.style.left=`${this.x}px`,this.elem.style.top=`${this.y}px`}destroy(){document.body.removeChild(this.elem),window.clearInterval(this.refreshInterval)}}n.emit("game_connect");const t=()=>{const e=`http://localhost:3000?id=${n.id}`;document.body.innerHTML+=e,new QRCode("qr").makeCode(e),n.removeListener("game_connected",t)},o=t=>{if(t){console.log("Controller connected successfully"),document.getElementById("qr").style.display="none";const t=new e(100,100);n.on("controller_state_change",e=>{t.setState(e)}),n.on("controller_disconnected",()=>{t.destroy()})}else console.log("Controller failed to connect"),document.getElementById("qr").style.display="block"};n.on("game_connected",t),n.on("controller_connected",o)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,